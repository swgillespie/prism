use std::str::FromStr;

use lalrpop_util::ParseError;

use crate::ast::*;

grammar;

pub Query: Query = {
    <l:@L> <i:Identifier> <p:("|" <Pipeline>)*> <r:@R> => {
        Query {
            span: span(l, r),
            table: i,
            pipelines: p
        }
    }
};

Pipeline: Pipeline = {
    <l:@L> "count" <r: @R> => Pipeline::Count(Count { span: span(l, r) })
};

Identifier: Identifier = {
    <l:@L> <n:Name> <r:@R> => Identifier { span: span(l, r), name: n }
};

Name: String = <s:r"[a-zA-Z_][a-zA-Z0-9_]*"> => String::from(s);
Integer: i64 = {
    r"[0-9]+" =>? i64::from_str(<>)
        .map_err(|_| ParseError::User {
            error: "integer literal is too large"
        })
};